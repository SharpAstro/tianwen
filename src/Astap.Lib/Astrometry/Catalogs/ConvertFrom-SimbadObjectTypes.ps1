$enumVals = @(
    @('Ir*', 'IrregularV*'),
    @('LXB', 'LowMassXBin'),
    @('No*', 'Nova'),
    @('El*', 'EllipVar'),
    @('HH', 'HerbigHaroObj'),
    @('Mi*', 'Mira'),
    @('SX*', 'SXPheV*'),
    @('cC*', 'ClassicalCep'),
    @('bC*', 'bCepV*'),
    @('RR*', 'RRLyrae'),
    @('Psr', 'Pulsar'),
    @('a2*', 'alf2CVnV*'),
    @('Or*', 'OrionV*'),
    @('Be*', 'Be*'),
    @('WR*', 'WolfRayet*'),
    @('RG*', 'RGB*'),
    @('BD*', 'BrownD*'),
    @('s*r', 'RedSG'),
    @('HXB', 'HighMassXBin'),
    @('EB*', 'EclBin'),
    @('Er*', 'Eruptive*'),
    @('RC*', 'RCrBV*'),
    @('*', 'Star'),
    @('TT*', 'TTauri*'),
    @('HS*', 'HotSubdwarf'),
    @('BS*', 'BlueStraggler'),
    @('sg*', 'Supergiant'),
    @('s*y', 'YellowSG'),
    @('Y*O', 'YSO'),
    @('s*b', 'BlueSG'),
    @('N*', 'Neutron*'),
    @('Ro*', 'RotV*'),
    @('SB*', 'SB*'),
    @('HB*', 'HorBranch*'),
    @('gD*', 'gammaDorV*'),
    @('Ae*', 'Ae*'),
    @('WV*', 'Type2Cep'),
    @('Pu*', 'PulsV*'),
    @('out', 'Outflow'),
    @('dS*', 'delSctV*'),
    @('BY*', 'BYDraV*'),
    @('RS*', 'RSCVnV*'),
    @('Ce*', 'Cepheid'),
    @('C*', 'C*'),
    @('Sy*', 'Symbiotic*'),
    @('Pe*', 'ChemPec*'),
    @('S*', 'S*'),
    @('XB*', 'XrayBin'),
    @('CV*', 'CataclyV*'),
    @('LP*', 'LongPeriodV*'),
    @('**', '**'),
    @('AB*', 'AGB*'),
    @('SN*', 'Supernova'),
    @('OH*', 'OH/IR*'),
    @('LM*', 'Low-Mass*'),
    @('Pl', 'Planet'),
    @('pA*', 'post-AGB*'),
    @('RV*', 'RVTauV*'),
    @('V*', 'Variable*'),
    @('PN', 'PlanetaryNeb'),
    @('Em*', 'EmLine*'),
    @('PM*', 'HighPM*'),
    @('WD*', 'WhiteDwarf'),
    @('HV*', 'HighVel*'),
    @('GlC', 'GlobCluster'),
    @('St*', 'Stream'),
    @('OpC', 'OpenCluster'),
    @('MGr', 'MouvGroup'),
    @('Cl*', 'Cluster*'),
    @('As*', 'Association'),
    @('RNe', 'RefNeb'),
    @('SFR', 'StarFormingReg'),
    @('GNe', 'GalNeb'),
    @('HII', 'HIIReg'),
    @('MoC', 'MolCld'),
    @('Cld', 'Cloud'),
    @('DNe', 'DarkNeb'),
    @('glb', 'Globule'),
    @('cor', 'denseCore'),
    @('bub', 'Bubble'),
    @('CGb', 'ComGlob'),
    @('SNR', 'SNRemnant'),
    @('HVC', 'HVCld'),
    @('ISM', 'ISM'),
    @('sh', 'HIshell'),
    @('Sy1', 'Seyfert1'),
    @('BLL', 'BLLac'),
    @('LSB', 'LowSurfBrghtG'),
    @('Bla', 'Blazar'),
    @('BiC', 'BrightestCG'),
    @('SyG', 'Seyfert'),
    @('rG', 'RadioG'),
    @('bCG', 'BlueCompactG'),
    @('Sy2', 'Seyfert2'),
    @('SBG', 'StarburstG'),
    @('LIN', 'LINER'),
    @('QSO', 'QSO'),
    @('H2G', 'HIIG'),
    @('EmG', 'EmissionG'),
    @('AGN', 'AGN'),
    @('G', 'Galaxy'),
    @('GiP', 'GinPair'),
    @('GiG', 'GtowardsGroup'),
    @('GiC', 'GtowardsCl'),
    @('CGG', 'Compact_Gr_G'),
    @('IG', 'InteractingG'),
    @('PaG', 'PairG'),
    @('GrG', 'GroupG'),
    @('ClG', 'ClG'),
    @('SCG', 'SuperClG'),
    @('vid', 'Void'),
    @('gLe', 'GravLens'),
    @('LeG', 'LensedG'),
    @('Lev', 'LensingEv'),
    @('LeQ', 'LensedQ'),
    @('LeI', 'LensedImage'),
    @('gLS', 'GravLensSystem'),
    @('GWE', 'GravWaveEvent'),
    @('grv', 'Gravitation'),
    @('mR', 'metricRad'),
    @('gB', 'gammaBurst'),
    @('ULX', 'ULX'),
    @('FIR', 'FarIR'),
    @('EmO', 'EmObj'),
    @('blu', 'blue'),
    @('cm', 'cmRad'),
    @('mm', 'mmRad'),
    @('NIR', 'NearIR'),
    @('smm', 'smmRad'),
    @('HI', 'HI'),
    @('rB', 'radioBurst'),
    @('Mas', 'Maser'),
    @('ev', 'Transient'),
    @('Rad', 'Radio'),
    @('IR', 'Infrared'),
    @('UV', 'UV'),
    @('X', 'X'),
    @('gam', 'gamma'),
    @('mul', 'Blend'),
    @('err', 'Inexistent'),
    @('PoC', 'PartofCloud'),
    @('PoG', 'PartofG'),
    @('?', 'Unknown'),
    @('reg', 'Region'),
    @('Q?', 'QSO_Candidate'),
    @('Bz?', 'Blazar_Candidate'),
    @('BL?', 'BLLac_Candidate'),
    @('HS?', 'Hsd_Candidate'),
    @('Gl?', 'GlCl_Candidate'),
    @('G?', 'G_Candidate'),
    @('BD?', 'brownD*_Candidate'),
    @('LM?', 'low-mass*_Candidate'),
    @('SN?', 'SN*_Candidate'),
    @('BH?', 'BH_Candidate'),
    @('N*?', 'NS_Candidate'),
    @('SR?', 'SNR_Candidate'),
    @('WD?', 'WD*_Candidate'),
    @('of?', 'outflow_Candidate'),
    @('BS?', 'BSS_Candidate'),
    @('pA?', 'post-AGB*_Candidate'),
    @('Mi?', 'Mi*_Candidate'),
    @('V*?', 'V*_Candidate'),
    @('LP?', 'LP*_Candidate'),
    @('AB?', 'AGB*_Candidate'),
    @('s?b', 'BSG*_Candidate'),
    @('s?y', 'YSG*_Candidate'),
    @('s?r', 'RSG*_Candidate'),
    @('sg?', 'SG*_Candidate'),
    @('RB?', 'RGB*_Candidate'),
    @('Ce?', 'Cepheid_Candidate'),
    @('RR?', 'RRLyr_Candidate'),
    @('HB?', 'HB*_Candidate'),
    @('Ae?', 'Ae*_Candidate'),
    @('Be?', 'Be*_Candidate'),
    @('WR?', 'WR*_Candidate'),
    @('OH?', 'OH_Candidate'),
    @('S*?', 'S*_Candidate'),
    @('C*?', 'C*_Candidate'),
    @('TT?', 'TTau*_Candidate'),
    @('Y*?', 'YSO_Candidate'),
    @('HX?', 'HMXB_Candidate'),
    @('LX?', 'LMXB_Candidate'),
    @('XB?', 'XB*_Candidate'),
    @('No?', 'Nova_Candidate'),
    @('CV?', 'CV*_Candidate'),
    @('Sy?', 'Symb*_Candidate'),
    @('EB?', 'EB*_Candidate'),
    @('**?', '**_Candidate'),
    @('Gr?', 'GrG_Candidate'),
    @('C?G', 'ClG_Candidate'),
    @('SC?', 'SClG_Candidate'),
    @('PN?', 'PN_Candidate'),
    @('RC?', 'RCrB_Candidate'),
    @('LI?', 'lensImage_Candidate'),
    @('Le?', 'Lens_Candidate'),
    @('LS?', 'LensSystem_Candidate'),
    @('UX?', 'ULX_Candidate'),
    @('Pl?', 'Planet_Candidate'),
    @('AG?', 'AGN_Candidate')
)

$enumVals | ForEach-Object {
    $abbrevChars = $_[0].ToCharArray()
    $name = $_[1].Replace('*', 'Star')

    $abbrev = [System.Text.StringBuilder]::new()

    $count = $abbrevChars.Count
    for ($i = 0; $i -lt $count; $i++) {
        $null = $abbrev.Append("'").Append($abbrevChars[$i]).Append("'");

        if ($i -eq ($count - 1)) {
            $null = $abbrev.Append(',')
        } else {
            $null = $abbrev.Append(" << ").Append(($count - $i - 1) * 7).Append(" | ")
        }
    }

    $cleanedName = $name.Replace("post-", "Post").Replace("low-", "Low").Replace('_', "").Replace('/', '_')
    Write-Host "$cleanedName = $abbrev"
}
